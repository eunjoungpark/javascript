1. 정규식
    new RegExp() : 정규식 인스턴스 생성
    exec() : 정규식 내에 문자가 존재할 경우 해당 반환
    test() : 정규식 문자를 true or false 반환

2. Element 관련
    document.createElement(element) : 엘리먼트 생성
    document.createTextNode(text) : 텍스트 노드 생성
    element.appendChild(child element) : 하위요소를 상위요소에 추가
    document.querySelector(selector) : selector에 부합하는 요소 반환.
    document.querySelectorAll(selectors) : selectors에 부합하는 모든 요소 반환. (배열)
    element.setAttribute(key, value) : 요소에 속성추가
    element.getAttribute(key) : 요소의 속성값을 반환.
    element.removeAttribute(key) : 요소의 속성값을 삭제.
    element.nextElementSibling : 이웃하는 다음 요소 반환.
    element.previousElementSibling : 이웃하는 이전 요소 반환.
    element.offsetParent : offset 된 부모를 반환(body).
    element.getBoundingClientRect().width : 분수값이 필요한 경우
    element.ClientWidth : 정수값으로 반올림함.
    element.parentElement : 바로 상위(부모) node를 반환.

3. 배열
    forEach : 배열의 모든 순서를 돔.
    [].forEach.call(_contEls, callback function(item, index ...)) : 유사배열을 forEach으로 사용할 경우


4. Object
    Object.keys : 오브젝트의 모든 속성(키)값을 배열로 반환.


면접질문 
=>=> vue
- 자바스크립트 프레임웍을 장점
Vue, React, Angular 등의 자바스크립트 프레임웍은 SPA(Single Page Application) 단위의 화면을 제작할 수 있게 해준다.
즉, SPA의 장점을 소개하는 것이 그 이유가 될 수 있는데, 개발자 입장에서 서버사이드 렌더링에 비해 배포가 간단하고,
처음 페이지 호출 시, 정적리소스들을 최초 한번만 다운로드하며, 유저에게 네이티브앱과 유사한 사용경험을 제공한다.
이후 페이지 요청시, 필요한 데이터만 요청하여 전체페이지를 다시 렌더링 하지 않아 트래픽 감소와 빠른 속도 및 반응성으로 
사용자 UX향상시킬 수 있다.

- 자바스크립트 프레임웍의 단점
초기 구동 속도가 느릴 수있지만, 여러가지 장점을 고려했을때 결정적인 단점으로 생각할수 없으며, 프로젝트의 규모가 커질때는
lazyload 사용으로 벤더 js를 사이즈를 줄이는 방법등 해결방안들이 있습니다.

- vue의 생명주기
초기에 vue생성자가 생성되고, 이벤트와 라이프사이클이 초기화 된다.
beforeCreate, created, beforeMount, mounted, beforeUpdate, updated, beforeDestroy, destoryed

- computed와 watch, methods의 차이점
methods 호출시 전체 계산을 다시하는 방식이며, computed는 값의 변경이 발생했을 때만, 호출되고 동일한 값일 경우
기존에 계산되었던 값을 이용한다.
watch는 data속성을 추적하는 방식으로 데이터 속성의 변경사항으로 실시간으로 추적할 수 있다.

- vuex, vue-loader, router가 각각 무엇인가
vuex는 상태관리를 하는 라이브러리로 data의 흐름을 관리해주면, 중대형 프로젝트에 사용하면 더욱 유용하다.
여러 중첩된 컴포넌트를 사용할 경우, prop정의가 장황해질 수 있는 단점과 형제컴포넌트 끼리의 prop사용에 제한되어
오는 데이터 이동 흐름은 유지보수가 어렵기 때문에 중앙집중식 저장소 방식의 vuex사용이 해결방법이 될수 있다.

vue-loader는 실제 webpack loader를 인데, .vue파일을 해석할수 있게 해주며, vue 개발환경인 
template, script, style 각 영역을 해석해주고 css의 스코프처리가 가능하게 해준다.
마지막으로 핫리로딩 기능을 사용할수 있게 하는 로더이다.

router는 단일 페이지 애플리케이션에서 다른 페이지로 이동할 수 있는 맵과 같은 것으로 
중첩된 컴포넌트의 링크와 뷰를 제공하며, 파라미터 및 쿼리를 제공한다.
또, 트렌지션 효과, active css처리 HTML5의 히스토리 및 해시모드 등을 제공한다.


- 가상돔에 대한 개념.
가상돔은 React에서 가져온 개념으로 실제 DOM과 꼭 같은 것은 아니며, Vue 컴포넌트 트리로 생성된 VNode이다.
이렇게 생성된 가상돔을 실제 DOM에 붙이는 방식으로, 변경이 있는 DOM을 그려내는데 성능부하를 최소화 하기 위한 방식.

- vue-lazy loader
webpack으로 코드를 분할하는 방식으로, 컴포넌트 단위로 분할해서, 로드속도를 향상시키는 방식이다.

- vue에서의 SEO문제
Nuxt.js나 prerender 또는 vue-server-render 사용

- vue와 react, angular의 차이점.
- webpack(Browserify)과 grunt, gulp의 차이
=>=> 개발관련
- Restful API란?
    post, get, push, delete


=>=> JAVASCRIPT
- 객제지향(https://jeong-pro.tistory.com/95)
    - 실제 세계를 모델링하여 만들어진 것으로, 각각의 속성들의 만들어지는 순서가 필요없고, 따로 독립적으로 개발되어 한 곳에 모여짐.
    - 대형프로젝트에 적합.
    - 특성
        1. 클래스 + 인스턴스 (객체)
        2. 추상화
        3. 캡슐화
        4. 다형성
        5. 상속
    - 장점
        1. 코드 재사용이 용이 (클래스 상송 및 확장하여 사용할 수 있음.)
        2. 디버깅이 쉬움
        3. 신뢰성있는 소프트웨어 쉽게 제작
        4. 업그레이드가 쉬움.
    - 단점
        1. 절차지향 방법보다 규모가 커지고 느려질 수 있음.
        2. 설계시 시간과 노력이 필요.

- 절차 지향
    - 어느 한 곳을 기점으로 순서대로 만들어 나가야 하는 방식. 만들어진 속성들을 분리되면 안되고 순서가 틀어지면 안되며, 고장이 나면 전체 기능이 마비됨. 
    다른 부품을 대체할 수도 없음.
    - 객체지향적인 방법보다 소요시간이 줄어 유리함.
    - 간단하고, 작은 단위의 작업에 적합.
- 함수형 프로그램이랑?
- apply, call, bind의 차이설명.

- 유사배열과 배열의 차이
유사배열은 배열과 생김새가 비슷하지만, 실제로 배열에서 제동하는 메소드들을 사용할수 없으면
유사배열은 실제 object형태의 키와 값으로 되어있는 형태이다.
그렇다고 해서 아예, 배열의 메소드들을 사용할 수 없는 것은 아니고, Array.prototype.apply나 call을
이용하여 사용하거나 es6에서 제공하는 from메소드들 이용하면 사용할수 있다.

- ES6문법 아는대로...
    - Object.is
    - Object.assign
    - 스프레드 오퍼레이터
    - 구문분할기법(디스트럭처링)
    - import & export
    - const & let
    - arrow function
    - 향상된 객체 리터럴
    - 템플릿 러터럴 (백틱)
- throttle와 debounce의 차이
- Object.defineProperty 이 무엇인가
- map, filter, reduce, forEach차이
 map은 모든 배열의 수식을 적용하여 결과값을 모아 새배열을 생성하여 반환.
 filter는 수식에 해당하는 값만 모아 새배열을 생성하여 반환.
 reduce는 모든 배열을 돌면 누적된 하나의 값을 반환.
 forEach는 모든 배열을 순환하여 수식을 처리하는 것으로 값을 모아 새배열을 생성하는 map과는 다름.

- use strick 가 무엇인가
- for-in과 for-of차이
for in은 배열을 순회하여 수식을 처리하는데, 부모배열이 가지고 있는 값을 출력하는 경우가 있어, 신뢰성이 떨어진다.
반해 for-of는 부모의 배열값과 상관없이 해당 배열만 참조하므로 데이터의 신뢰성을 얻을 수 있다.

- Promise (async, await)
callback과의 차이

=>=> HTML
DOM과 CSSOM이란?
HTML5란?

==> 참고하는 사이트
- TOAST meetup
- NTS 블로그
- Naver D2
- velog
- 구글링
- stackoverflow
- https://medium.com/

Postman
개발하 API를 테스트하고, 테스트 결과를 공유하여 API생산성을 높여주는 플랫폼.

괜찮은 사이트 
http://es6-features.org/#PromiseUsage
https://www.tutorialspoint.com/jquery/jquery-effects.htm
https://www.tutorialspoint.com/es6/es6_animation.htm
https://meetup.toast.com/?page=7
https://d2.naver.com/helloworld/59361
https://www.html5rocks.com/en/features/storage
https://github.com/philipwalton/flexbugs (flexbox로 레이아웃 잡기)
https://github.com/gnarf/jquery-requestAnimationFrame
(관련 http://www.gisdeveloper.co.kr/?p=2237)




